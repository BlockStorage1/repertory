set(CURL_PROJECT_NAME curl_${CURL_VERSION})
set(CURL_BUILD_ROOT ${EXTERNAL_BUILD_ROOT}/builds/${CURL_PROJECT_NAME})

if (OPENSSL_ROOT_DIR)
  set(CURL_OPENSSL_EXTRA -DOPENSSL_ROOT_DIR=${OPENSSL_ROOT_DIR})
elseif(LINUX)
  set(CURL_OPENSSL_EXTRA -DOPENSSL_ROOT_DIR=${EXTERNAL_BUILD_ROOT})
endif()

set(CURL_CMAKE_ARGS
  ${CURL_OPENSSL_EXTRA}
  -DCMAKE_BUILD_TYPE=${EXTERNAL_BUILD_TYPE}
  -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
  -DCMAKE_GENERATOR=${CMAKE_GENERATOR}
  -DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}
  -DCMAKE_POSITION_INDEPENDENT_CODE=ON
  -DCMAKE_INSTALL_PREFIX=${EXTERNAL_BUILD_ROOT}
  -DCMAKE_USE_WINSSL=OFF
  -DCURL_CA_FALLBACK=ON
  -DCURL_CA_BUNDLE=./cacert.pem
  -DOPENSSL_USE_STATIC_LIBS=ON
  -DCURL_USE_OPENSSL=ON
  -DCURL_USE_LIBSSH2=OFF
  -DENABLE_THREADED_RESOLVER=ON
  -DBUILD_SHARED_LIBS=OFF
  -DCURL_STATICLIB=ON
  -DBUILD_TESTING=OFF
  -DBUILD_CURL_EXE=OFF
  -DCURL_DISABLE_LDAP=ON
  -DCURL_ZLIB=OFF
)

ExternalProject_Add(curl_project
  DOWNLOAD_NO_PROGRESS 1
  URL https://github.com/curl/curl/archive/curl-${CURL_VERSION}.tar.gz
  PREFIX ${CURL_BUILD_ROOT}
  CMAKE_ARGS ${CURL_CMAKE_ARGS}
)

add_definitions(-DCURL_STATICLIB=ON -DCURL_DISABLE_LDAP=ON)

if (MSVC)
  set(CURL_LIBRARIES ${EXTERNAL_BUILD_ROOT}/lib/libcurl${DEBUG_EXTRA2}.${STATIC_LIB_EXT})
else()
  set(CURL_LIBRARIES libcurl${DEBUG_EXTRA2}.${STATIC_LIB_EXT})
  add_dependencies(curl_project openssl_project)
endif()
